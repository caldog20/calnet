// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        (unknown)
// source: management/v1/manager.proto

package managementv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NetworkUpdateType int32

const (
	NetworkUpdateType_NONE          NetworkUpdateType = 0
	NetworkUpdateType_FULL          NetworkUpdateType = 1
	NetworkUpdateType_NEW_PEERS     NetworkUpdateType = 2
	NetworkUpdateType_CHANGED_PEERS NetworkUpdateType = 3
	NetworkUpdateType_REMOVED_PEERS NetworkUpdateType = 4
	NetworkUpdateType_CONFIG        NetworkUpdateType = 5
)

// Enum value maps for NetworkUpdateType.
var (
	NetworkUpdateType_name = map[int32]string{
		0: "NONE",
		1: "FULL",
		2: "NEW_PEERS",
		3: "CHANGED_PEERS",
		4: "REMOVED_PEERS",
		5: "CONFIG",
	}
	NetworkUpdateType_value = map[string]int32{
		"NONE":          0,
		"FULL":          1,
		"NEW_PEERS":     2,
		"CHANGED_PEERS": 3,
		"REMOVED_PEERS": 4,
		"CONFIG":        5,
	}
)

func (x NetworkUpdateType) Enum() *NetworkUpdateType {
	p := new(NetworkUpdateType)
	*p = x
	return p
}

func (x NetworkUpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkUpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_management_v1_manager_proto_enumTypes[0].Descriptor()
}

func (NetworkUpdateType) Type() protoreflect.EnumType {
	return &file_management_v1_manager_proto_enumTypes[0]
}

func (x NetworkUpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ServerKeyRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerKeyRequest) Reset() {
	*x = ServerKeyRequest{}
	mi := &file_management_v1_manager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerKeyRequest) ProtoMessage() {}

func (x *ServerKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_manager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ServerKeyRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ServerKeyRequest_builder) Build() *ServerKeyRequest {
	m0 := &ServerKeyRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ServerKeyResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ServerKey   *string                `protobuf:"bytes,1,opt,name=server_key,json=serverKey" json:"server_key,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ServerKeyResponse) Reset() {
	*x = ServerKeyResponse{}
	mi := &file_management_v1_manager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerKeyResponse) ProtoMessage() {}

func (x *ServerKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_manager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ServerKeyResponse) GetServerKey() string {
	if x != nil {
		if x.xxx_hidden_ServerKey != nil {
			return *x.xxx_hidden_ServerKey
		}
		return ""
	}
	return ""
}

func (x *ServerKeyResponse) SetServerKey(v string) {
	x.xxx_hidden_ServerKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ServerKeyResponse) HasServerKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ServerKeyResponse) ClearServerKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ServerKey = nil
}

type ServerKeyResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ServerKey *string
}

func (b0 ServerKeyResponse_builder) Build() *ServerKeyResponse {
	m0 := &ServerKeyResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ServerKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_ServerKey = b.ServerKey
	}
	return m0
}

type LoginRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Hostname     *string                `protobuf:"bytes,1,opt,name=hostname" json:"hostname,omitempty"`
	xxx_hidden_ProvisionKey *string                `protobuf:"bytes,5,opt,name=provision_key,json=provisionKey" json:"provision_key,omitempty"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_management_v1_manager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_manager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LoginRequest) GetHostname() string {
	if x != nil {
		if x.xxx_hidden_Hostname != nil {
			return *x.xxx_hidden_Hostname
		}
		return ""
	}
	return ""
}

func (x *LoginRequest) GetProvisionKey() string {
	if x != nil {
		if x.xxx_hidden_ProvisionKey != nil {
			return *x.xxx_hidden_ProvisionKey
		}
		return ""
	}
	return ""
}

func (x *LoginRequest) SetHostname(v string) {
	x.xxx_hidden_Hostname = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *LoginRequest) SetProvisionKey(v string) {
	x.xxx_hidden_ProvisionKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *LoginRequest) HasHostname() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LoginRequest) HasProvisionKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LoginRequest) ClearHostname() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Hostname = nil
}

func (x *LoginRequest) ClearProvisionKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ProvisionKey = nil
}

type LoginRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Hostname     *string
	ProvisionKey *string
}

func (b0 LoginRequest_builder) Build() *LoginRequest {
	m0 := &LoginRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Hostname != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Hostname = b.Hostname
	}
	if b.ProvisionKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_ProvisionKey = b.ProvisionKey
	}
	return m0
}

type LoginResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_management_v1_manager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_manager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type LoginResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 LoginResponse_builder) Build() *LoginResponse {
	m0 := &LoginResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type NetworkUpdateRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Poll        bool                   `protobuf:"varint,1,opt,name=poll" json:"poll,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkUpdateRequest) Reset() {
	*x = NetworkUpdateRequest{}
	mi := &file_management_v1_manager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkUpdateRequest) ProtoMessage() {}

func (x *NetworkUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_manager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkUpdateRequest) GetPoll() bool {
	if x != nil {
		return x.xxx_hidden_Poll
	}
	return false
}

func (x *NetworkUpdateRequest) SetPoll(v bool) {
	x.xxx_hidden_Poll = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *NetworkUpdateRequest) HasPoll() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkUpdateRequest) ClearPoll() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Poll = false
}

type NetworkUpdateRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Poll *bool
}

func (b0 NetworkUpdateRequest_builder) Build() *NetworkUpdateRequest {
	m0 := &NetworkUpdateRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Poll != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Poll = *b.Poll
	}
	return m0
}

type NetworkUpdateResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type         NetworkUpdateType      `protobuf:"varint,1,opt,name=type,enum=management.v1.NetworkUpdateType" json:"type,omitempty"`
	xxx_hidden_NewPeers     *[]*RemotePeerConfig   `protobuf:"bytes,2,rep,name=new_peers,json=newPeers" json:"new_peers,omitempty"`
	xxx_hidden_ChangedPeers *[]*RemotePeerConfig   `protobuf:"bytes,3,rep,name=changed_peers,json=changedPeers" json:"changed_peers,omitempty"`
	xxx_hidden_RemovedPeers *[]*RemotePeerConfig   `protobuf:"bytes,4,rep,name=removed_peers,json=removedPeers" json:"removed_peers,omitempty"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *NetworkUpdateResponse) Reset() {
	*x = NetworkUpdateResponse{}
	mi := &file_management_v1_manager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkUpdateResponse) ProtoMessage() {}

func (x *NetworkUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_manager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkUpdateResponse) GetType() NetworkUpdateType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Type
		}
	}
	return NetworkUpdateType_NONE
}

func (x *NetworkUpdateResponse) GetNewPeers() []*RemotePeerConfig {
	if x != nil {
		if x.xxx_hidden_NewPeers != nil {
			return *x.xxx_hidden_NewPeers
		}
	}
	return nil
}

func (x *NetworkUpdateResponse) GetChangedPeers() []*RemotePeerConfig {
	if x != nil {
		if x.xxx_hidden_ChangedPeers != nil {
			return *x.xxx_hidden_ChangedPeers
		}
	}
	return nil
}

func (x *NetworkUpdateResponse) GetRemovedPeers() []*RemotePeerConfig {
	if x != nil {
		if x.xxx_hidden_RemovedPeers != nil {
			return *x.xxx_hidden_RemovedPeers
		}
	}
	return nil
}

func (x *NetworkUpdateResponse) SetType(v NetworkUpdateType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *NetworkUpdateResponse) SetNewPeers(v []*RemotePeerConfig) {
	x.xxx_hidden_NewPeers = &v
}

func (x *NetworkUpdateResponse) SetChangedPeers(v []*RemotePeerConfig) {
	x.xxx_hidden_ChangedPeers = &v
}

func (x *NetworkUpdateResponse) SetRemovedPeers(v []*RemotePeerConfig) {
	x.xxx_hidden_RemovedPeers = &v
}

func (x *NetworkUpdateResponse) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkUpdateResponse) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = NetworkUpdateType_NONE
}

type NetworkUpdateResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type         *NetworkUpdateType
	NewPeers     []*RemotePeerConfig
	ChangedPeers []*RemotePeerConfig
	RemovedPeers []*RemotePeerConfig
}

func (b0 NetworkUpdateResponse_builder) Build() *NetworkUpdateResponse {
	m0 := &NetworkUpdateResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Type = *b.Type
	}
	x.xxx_hidden_NewPeers = &b.NewPeers
	x.xxx_hidden_ChangedPeers = &b.ChangedPeers
	x.xxx_hidden_RemovedPeers = &b.RemovedPeers
	return m0
}

type RemotePeerConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          uint64                 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	xxx_hidden_PublicKey   *string                `protobuf:"bytes,2,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	xxx_hidden_Hostname    *string                `protobuf:"bytes,3,opt,name=hostname" json:"hostname,omitempty"`
	xxx_hidden_TunnelIp    *string                `protobuf:"bytes,4,opt,name=tunnel_ip,json=tunnelIp" json:"tunnel_ip,omitempty"`
	xxx_hidden_Connected   bool                   `protobuf:"varint,5,opt,name=connected" json:"connected,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RemotePeerConfig) Reset() {
	*x = RemotePeerConfig{}
	mi := &file_management_v1_manager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemotePeerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemotePeerConfig) ProtoMessage() {}

func (x *RemotePeerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_manager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RemotePeerConfig) GetId() uint64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *RemotePeerConfig) GetPublicKey() string {
	if x != nil {
		if x.xxx_hidden_PublicKey != nil {
			return *x.xxx_hidden_PublicKey
		}
		return ""
	}
	return ""
}

func (x *RemotePeerConfig) GetHostname() string {
	if x != nil {
		if x.xxx_hidden_Hostname != nil {
			return *x.xxx_hidden_Hostname
		}
		return ""
	}
	return ""
}

func (x *RemotePeerConfig) GetTunnelIp() string {
	if x != nil {
		if x.xxx_hidden_TunnelIp != nil {
			return *x.xxx_hidden_TunnelIp
		}
		return ""
	}
	return ""
}

func (x *RemotePeerConfig) GetConnected() bool {
	if x != nil {
		return x.xxx_hidden_Connected
	}
	return false
}

func (x *RemotePeerConfig) SetId(v uint64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *RemotePeerConfig) SetPublicKey(v string) {
	x.xxx_hidden_PublicKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *RemotePeerConfig) SetHostname(v string) {
	x.xxx_hidden_Hostname = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *RemotePeerConfig) SetTunnelIp(v string) {
	x.xxx_hidden_TunnelIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *RemotePeerConfig) SetConnected(v bool) {
	x.xxx_hidden_Connected = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *RemotePeerConfig) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RemotePeerConfig) HasPublicKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RemotePeerConfig) HasHostname() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RemotePeerConfig) HasTunnelIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RemotePeerConfig) HasConnected() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *RemotePeerConfig) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *RemotePeerConfig) ClearPublicKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PublicKey = nil
}

func (x *RemotePeerConfig) ClearHostname() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Hostname = nil
}

func (x *RemotePeerConfig) ClearTunnelIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TunnelIp = nil
}

func (x *RemotePeerConfig) ClearConnected() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Connected = false
}

type RemotePeerConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id        *uint64
	PublicKey *string
	Hostname  *string
	TunnelIp  *string
	Connected *bool
}

func (b0 RemotePeerConfig_builder) Build() *RemotePeerConfig {
	m0 := &RemotePeerConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Id = *b.Id
	}
	if b.PublicKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_PublicKey = b.PublicKey
	}
	if b.Hostname != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Hostname = b.Hostname
	}
	if b.TunnelIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_TunnelIp = b.TunnelIp
	}
	if b.Connected != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Connected = *b.Connected
	}
	return m0
}

type NaclMessage struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_NodeKey     *string                `protobuf:"bytes,1,opt,name=node_key,json=nodeKey" json:"node_key,omitempty"`
	xxx_hidden_Data        []byte                 `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NaclMessage) Reset() {
	*x = NaclMessage{}
	mi := &file_management_v1_manager_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NaclMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NaclMessage) ProtoMessage() {}

func (x *NaclMessage) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_manager_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NaclMessage) GetNodeKey() string {
	if x != nil {
		if x.xxx_hidden_NodeKey != nil {
			return *x.xxx_hidden_NodeKey
		}
		return ""
	}
	return ""
}

func (x *NaclMessage) GetData() []byte {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *NaclMessage) SetNodeKey(v string) {
	x.xxx_hidden_NodeKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *NaclMessage) SetData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Data = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *NaclMessage) HasNodeKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NaclMessage) HasData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NaclMessage) ClearNodeKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_NodeKey = nil
}

func (x *NaclMessage) ClearData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data = nil
}

type NaclMessage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Control key sent in header
	NodeKey *string
	Data    []byte
}

func (b0 NaclMessage_builder) Build() *NaclMessage {
	m0 := &NaclMessage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.NodeKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_NodeKey = b.NodeKey
	}
	if b.Data != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data = b.Data
	}
	return m0
}

var File_management_v1_manager_proto protoreflect.FileDescriptor

var file_management_v1_manager_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x21, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f,
	0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x12, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x22, 0x4f, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x0f, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x0a, 0x14, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x70, 0x6f, 0x6c, 0x6c, 0x22, 0x97, 0x02, 0x0a, 0x15, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x65, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50,
	0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x50, 0x65,
	0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x70,
	0x65, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x0d, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x22,
	0x98, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x70, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x3c, 0x0a, 0x0b, 0x4e, 0x61,
	0x63, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x68, 0x0a, 0x11, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x55, 0x4c, 0x4c, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x45, 0x57, 0x5f, 0x50, 0x45, 0x45, 0x52, 0x53, 0x10, 0x02,
	0x12, 0x11, 0x0a, 0x0d, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x5f, 0x50, 0x45, 0x45, 0x52,
	0x53, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x5f, 0x50,
	0x45, 0x45, 0x52, 0x53, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x10, 0x05, 0x32, 0xf2, 0x01, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x61, 0x63, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1a, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61,
	0x63, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x63, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x63, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x53, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12,
	0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01, 0x42, 0x49, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x6c, 0x64, 0x6f, 0x67, 0x32, 0x30, 0x2f, 0x63,
	0x61, 0x6c, 0x6e, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x76, 0x31, 0x92, 0x03, 0x05, 0xd2, 0x3e, 0x02,
	0x10, 0x03, 0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
}

var file_management_v1_manager_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_management_v1_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_management_v1_manager_proto_goTypes = []any{
	(NetworkUpdateType)(0),        // 0: management.v1.NetworkUpdateType
	(*ServerKeyRequest)(nil),      // 1: management.v1.ServerKeyRequest
	(*ServerKeyResponse)(nil),     // 2: management.v1.ServerKeyResponse
	(*LoginRequest)(nil),          // 3: management.v1.LoginRequest
	(*LoginResponse)(nil),         // 4: management.v1.LoginResponse
	(*NetworkUpdateRequest)(nil),  // 5: management.v1.NetworkUpdateRequest
	(*NetworkUpdateResponse)(nil), // 6: management.v1.NetworkUpdateResponse
	(*RemotePeerConfig)(nil),      // 7: management.v1.RemotePeerConfig
	(*NaclMessage)(nil),           // 8: management.v1.NaclMessage
}
var file_management_v1_manager_proto_depIdxs = []int32{
	0, // 0: management.v1.NetworkUpdateResponse.type:type_name -> management.v1.NetworkUpdateType
	7, // 1: management.v1.NetworkUpdateResponse.new_peers:type_name -> management.v1.RemotePeerConfig
	7, // 2: management.v1.NetworkUpdateResponse.changed_peers:type_name -> management.v1.RemotePeerConfig
	7, // 3: management.v1.NetworkUpdateResponse.removed_peers:type_name -> management.v1.RemotePeerConfig
	8, // 4: management.v1.ManagementService.Login:input_type -> management.v1.NaclMessage
	8, // 5: management.v1.ManagementService.NetworkUpdate:input_type -> management.v1.NaclMessage
	1, // 6: management.v1.ManagementService.ServerKey:input_type -> management.v1.ServerKeyRequest
	8, // 7: management.v1.ManagementService.Login:output_type -> management.v1.NaclMessage
	8, // 8: management.v1.ManagementService.NetworkUpdate:output_type -> management.v1.NaclMessage
	2, // 9: management.v1.ManagementService.ServerKey:output_type -> management.v1.ServerKeyResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_management_v1_manager_proto_init() }
func file_management_v1_manager_proto_init() {
	if File_management_v1_manager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_management_v1_manager_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_management_v1_manager_proto_goTypes,
		DependencyIndexes: file_management_v1_manager_proto_depIdxs,
		EnumInfos:         file_management_v1_manager_proto_enumTypes,
		MessageInfos:      file_management_v1_manager_proto_msgTypes,
	}.Build()
	File_management_v1_manager_proto = out.File
	file_management_v1_manager_proto_rawDesc = nil
	file_management_v1_manager_proto_goTypes = nil
	file_management_v1_manager_proto_depIdxs = nil
}
